---
http_interactions:
- request:
    method: get
    uri: https://doi.crossref.org/openurl?format=unixref&id=doi:10.1002/ca.22295&noredirect=true&pid=sowen@cs.man.ac.uk
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Crossref-Deployment-Name:
      - qs5-1
      Content-Type:
      - text/xml;charset=UTF-8
      Content-Language:
      - en-US
      Transfer-Encoding:
      - chunked
      Date:
      - Tue, 08 Oct 2019 13:45:00 GMT
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 08 Oct 2019 13:45:01 GMT
recorded_with: VCR 3.0.3
